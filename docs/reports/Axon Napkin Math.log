Traceback (most recent call last):
  File "/Users/plab/anaconda/envs/currpy/lib/python3.7/site-packages/jupyter_cache/executors/utils.py", line 56, in single_nb_execution
    record_timing=False,
  File "/Users/plab/anaconda/envs/currpy/lib/python3.7/site-packages/nbclient/client.py", line 1082, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/plab/anaconda/envs/currpy/lib/python3.7/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/plab/anaconda/envs/currpy/lib/python3.7/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/Users/plab/anaconda/envs/currpy/lib/python3.7/asyncio/base_events.py", line 579, in run_until_complete
    return future.result()
  File "/Users/plab/anaconda/envs/currpy/lib/python3.7/site-packages/nbclient/client.py", line 536, in async_execute
    cell, index, execution_count=self.code_cells_executed + 1
  File "/Users/plab/anaconda/envs/currpy/lib/python3.7/site-packages/nbclient/client.py", line 827, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/Users/plab/anaconda/envs/currpy/lib/python3.7/site-packages/nbclient/client.py", line 735, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply['content'])
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
#lets assume all cells are layed out in a latice matrix (i.e. they are all orthogonal to each other and they can thus be represented as a matrix.)
print('Estimated number neurons')
#citation
neuronNum=100000000000
print(neuronNum)
print('')

print('Estimated number of glia')
gliaNum=neuronNum*10
print(gliaNum)
print('')




#neuronBodySize=25*10^-6
#gliaBodySize=15*10^-6

#neuronVolume=[neuronBodySize^3]*neuronNum
#gliaVolume=[gliaBodySize^3]*gliaNum

totalCellNum=neuronNum+gliaNum

print('Number of cells per voxel (estimate)')
cellPerVox=totalCellNum/largeNum
print(cellPerVox)


print('Number of cells per cubic mm (estimate)')
cellPerMM=cellPerVox/(voxelDims[0]*voxelDims[1]*voxelDims[2])
print(cellPerMM)
print('')

axonNum=neuronNum

print('Current data storage usage for T1')
import os
statinfo = os.stat(t1Path)
T1bytes=statinfo.st_size
print(f'{T1bytes} bytes' )
T1gigabytes=T1bytes/1073741824
print(f'{T1gigabytes} gigabytes' )
print('')

print('Storage for a ')
perCellT1bytes=cellPerVox*largeNum*8
print(f'{percellT1bytes} bytes' )
perCellT1gigabytes=perCellT1bytes/1073741824
print(f'{perCellT1gigabytes} gigabytes' )




------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
[0;32m<ipython-input-2-ef72e9d63a3d>[0m in [0;36m<module>[0;34m[0m
[1;32m     45[0m [0mprint[0m[0;34m([0m[0;34m'Storage for a '[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     46[0m [0mperCellT1bytes[0m[0;34m=[0m[0mcellPerVox[0m[0;34m*[0m[0mlargeNum[0m[0;34m*[0m[0;36m8[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 47[0;31m [0mprint[0m[0;34m([0m[0;34mf'{percellT1bytes} bytes'[0m [0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     48[0m [0mperCellT1gigabytes[0m[0;34m=[0m[0mperCellT1bytes[0m[0;34m/[0m[0;36m1073741824[0m[0;34m[0m[0;34m[0m[0m
[1;32m     49[0m [0mprint[0m[0;34m([0m[0;34mf'{perCellT1gigabytes} gigabytes'[0m [0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;31mNameError[0m: name 'percellT1bytes' is not defined
NameError: name 'percellT1bytes' is not defined

